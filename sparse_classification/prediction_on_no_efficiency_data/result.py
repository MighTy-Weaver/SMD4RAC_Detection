import numpy as np

result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
          1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
          0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
          0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
          0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0]

rooms = [913, 822, 635, 1002, 901, 901, 903, 612, 1001, 622, 1012, 916, 619, 1003, 1002, 630, 1004, 624, 819, 1004, 901,
         624, 1002, 812, 635, 612, 307, 1001, 819, 619, 829, 906, 913, 628, 808, 809, 819, 619, 1002, 822, 1003, 1001,
         913, 916, 1003, 829, 619, 619, 303, 916, 819, 819, 806, 612, 624, 822, 809, 809, 1003, 307, 619, 913, 619, 808,
         619, 1003, 1002, 1012, 806, 901, 328, 1004, 1002, 1012, 307, 906, 303, 628, 629, 1004, 628, 619, 1002, 809,
         901, 1003, 629, 906, 1003, 822, 809, 916, 903, 612, 1002, 819, 903, 1012, 307, 901, 1012, 916, 808, 916, 1002,
         819, 819, 622, 822, 624, 1012, 812, 904, 630, 308, 612, 1001, 916, 635, 619, 619, 903, 809, 307, 829, 913, 822,
         630, 1003, 622, 822, 1004, 901, 307, 906, 822, 901, 819, 1003, 916, 903, 916, 612, 619, 819, 1002, 1002, 806,
         1003, 612, 809, 1002, 822, 1004, 308, 612, 913, 822, 809, 622, 307, 819, 308, 822, 1012, 311, 303, 808, 829,
         809, 612, 619, 1003, 901, 916, 819, 622, 916, 916, 311, 303, 1001, 307, 1002, 819, 916, 819, 819, 622, 619,
         1003, 1012, 812, 1003, 622, 913, 630, 630, 1012, 1003, 1001, 913, 829, 906, 819, 630, 308, 328, 1002, 1003,
         311, 619, 1001, 901, 635, 622, 906, 303, 819, 916, 822, 819, 822, 1002, 809, 1004, 823, 916, 619, 619, 808,
         832, 1004, 1004, 906, 832, 303, 1012, 916, 1002, 328, 913, 1003, 1002, 622, 901, 904, 1003, 622, 819, 812, 906,
         916, 612, 619, 303, 916, 1004, 829, 635, 1012, 808, 303, 1003, 628, 829, 901, 809, 1002, 901, 903, 619, 822,
         903, 819, 1012, 622, 1001, 622, 629, 829, 913, 630, 1003, 307, 622, 1001, 832, 819, 622, 630, 630, 1003, 622,
         903, 916, 809, 308, 916, 1003, 822, 1003, 307, 808, 1001, 630, 1003, 819, 303, 913, 1003, 628, 809, 1003, 829,
         913, 1002, 308, 916, 809, 624, 903, 808, 808, 819, 628, 903, 308, 903, 901, 1004, 808, 829, 809, 819, 808, 630,
         806, 1012, 619, 819, 308, 635, 819, 832, 812, 635, 1012, 916, 1012, 629, 809, 808, 1004, 1003, 822, 829, 1002,
         1002, 612, 1003, 806, 808, 619, 822, 913, 612, 916, 1001, 308, 808, 1001, 906, 903, 808, 808, 308, 819, 809,
         829, 1001, 1001, 819, 916, 916, 823, 916, 832, 612, 1001, 903, 808, 901, 832, 809, 629, 903, 1003, 1003, 808,
         808, 819, 1002, 806, 808, 819, 906, 1002, 1001, 311, 619, 901, 822, 906, 1012, 808, 809, 916, 829, 832, 1003,
         916, 819, 819, 303, 829, 1001, 1003, 822, 1003, 916, 1003, 628, 622, 808, 308, 916, 808, 612, 904, 903, 629,
         822, 622, 1001, 628, 622, 1001, 612, 819, 1012, 901, 806, 1012, 629, 1004, 901, 619, 808, 809, 819, 916, 628,
         809, 808, 303, 901, 1002, 1002, 812, 308, 619, 916, 903, 809, 624, 829, 1001, 1003, 1012, 1003, 303, 916, 832,
         619, 916, 812, 308, 809, 1003, 822, 901, 823, 619, 619, 1001, 829, 622, 308, 619, 901, 916, 1001, 812, 808,
         903, 619, 619, 832, 832, 829, 823, 311, 906, 808, 1004, 819, 612, 822, 307, 822, 901, 308, 1001, 808, 328, 308,
         808, 1001, 822, 916, 619, 829, 628, 822, 1012, 1002, 1001, 823, 822, 1004, 1012, 913, 809, 619, 809, 904, 619,
         916, 311, 829, 308, 901, 307, 1002, 916, 612, 808, 1012, 808, 303, 812, 303, 619, 901, 630, 822, 916, 1012,
         622, 612, 1001, 1003, 812, 630, 906, 822, 619, 822, 808, 1002, 832, 635, 612, 630, 308, 903, 916, 829, 829,
         916, 822, 1001, 1003, 1003, 906, 612, 901, 308, 916, 829, 1001, 622, 913, 1012, 822, 809, 629, 916, 812, 629,
         624, 622, 829, 819, 1001, 1001, 901, 1001, 1003, 901, 906, 1001, 619, 916, 829, 823, 307, 808, 1003, 1003, 819,
         901, 1001, 630, 916, 904, 308, 1001, 308, 819, 808, 1001, 822, 913, 829, 829, 619, 822, 624, 619, 832, 916,
         1002, 1012, 901, 1001, 916, 1003, 829, 619, 916, 619, 906, 1001, 822, 1004, 809, 1002, 635, 308, 619, 307, 829,
         916, 311, 916, 913, 308, 628, 1003, 819, 832, 903, 303, 812, 619, 1003, 819, 916, 812, 809, 619, 619, 904,
         1012, 901, 1003, 829, 808, 819, 819, 1001, 622, 1002, 624, 832, 635, 1002, 1002, 1002, 819, 916, 906, 308, 913,
         903, 1003, 823, 1001, 819, 1003, 913, 1001, 903, 906, 630, 303, 622, 809, 612, 1001, 1001, 819, 308, 630, 913,
         619, 916, 903, 1003, 1001, 901, 916, 829, 916, 901, 916, 904, 823, 1003, 624, 904, 916, 829, 303, 901, 809,
         622, 906, 808, 903, 1003, 808, 916, 903, 630, 1001, 812, 622, 916, 901, 808, 303, 808, 808, 307, 906, 307,
         1003, 622, 916, 819, 1003, 311, 904, 612, 903, 622, 628, 307, 822, 903, 308, 1001, 619, 629, 619, 1002, 622,
         829, 819, 808, 903, 622, 622, 307, 808, 822, 612, 829, 903, 1002, 819, 819, 901, 809, 806, 1012, 628, 1001,
         311, 809, 913, 819, 906, 619, 303, 1001, 630, 819, 906, 1001, 307, 823, 808, 916, 619, 1001, 612, 812, 1001,
         906, 635, 308, 832, 913, 901, 1004, 808, 809, 1004, 809, 901, 808, 1002, 916, 829, 1003, 903, 1002, 903, 906,
         622, 808, 1004, 630, 1001, 622, 903, 901, 808, 822, 630, 829, 308, 1001, 901, 819, 819, 630, 823, 328, 1012,
         622, 829, 901, 635, 806, 1012, 808, 1012, 829, 901, 901, 812, 823, 916, 619, 913, 822, 829, 1003, 622, 307,
         903, 1003, 819, 308, 1004, 808, 1001, 1003, 612, 308, 307, 808, 619, 308, 829, 311, 308, 1002, 1001, 303, 1012,
         916, 829, 832, 822, 1001, 808, 812, 1002, 619, 1003, 1002, 1004, 1001, 612, 307, 822, 1002, 829, 819, 308, 819,
         904, 906, 829, 1001, 819, 308, 906, 832, 832, 622, 903, 628, 819, 916, 903, 1012, 624, 916, 808, 829, 903, 630,
         307, 1002, 901, 819, 303, 1003, 619, 901, 903, 1001, 1002, 809, 829, 819, 812, 808, 906, 1003, 630, 622, 901,
         624, 1012, 1003, 630, 829, 832, 624, 916, 1004, 628, 1002, 1003, 619, 1003, 916, 916, 901, 809, 622, 822, 622,
         619, 308, 308, 619, 1012, 829, 806, 1004, 622, 1002, 1002, 819, 628, 809, 819, 628, 635, 916, 903, 308, 1004,
         303, 619, 822, 808, 904, 619, 904, 628, 1002, 903, 308, 916, 1002, 622, 630, 1003, 832, 916, 311, 1001, 806,
         1003, 819, 311, 1012, 619, 612, 1003, 832, 311, 635, 1003, 1001, 809, 901, 1001, 612, 819, 1012, 1003, 904,
         308, 812, 619, 1012, 913, 628, 303, 1003, 303, 635, 903, 619, 619, 829, 307, 904, 1004, 901, 901, 832, 906,
         906, 809, 823, 808, 303, 619, 308, 328, 629, 808, 619, 1002, 1003, 823, 906, 1003, 635, 1001, 629, 635, 622,
         1003, 819, 1003, 901, 619, 809, 832, 808, 808, 635, 903, 819, 901, 619, 1004, 619, 819, 308, 1001, 829, 806,
         916, 1001, 903, 1003, 822, 1001, 1012, 303, 822, 308, 619, 612, 308, 832, 628, 630, 819, 901, 628, 904, 619,
         829, 916, 901, 622, 904, 1003, 303, 1004, 1001, 619, 1001, 619, 812, 630, 808, 1003, 1002, 622, 1001, 819, 635,
         628, 916, 328, 906, 906, 1004, 1003, 916, 808, 901, 819, 823, 628, 612, 624, 1002, 1001, 622, 619, 622, 906,
         819, 612, 311, 622, 823, 808, 1002, 1002, 619, 1001, 913, 822, 809, 901, 622, 809, 822, 829, 622, 1003, 906,
         916, 916, 1012, 913, 901, 808, 809, 832, 308, 819, 901, 916, 901, 1012, 635, 635, 1001, 822, 619, 819, 628,
         630, 819, 808, 1002, 916, 619, 903, 1003, 308, 1001, 630, 829, 809, 823, 832, 903, 307, 916, 812, 901, 808,
         622, 1004, 619, 1012, 1003, 622, 628, 904, 819, 904, 1001, 829, 913, 619, 311, 829, 1012, 819, 622, 624, 1004,
         903, 916, 308, 1012, 1001, 1003, 307, 1001, 832, 819, 822, 808, 1004, 1012, 619, 906, 1002, 612, 808, 916, 916,
         819, 916, 904, 635, 906, 819, 901, 901, 303, 629, 808, 916, 1002, 619, 1001, 819, 1003, 307, 812, 819, 808,
         307, 619, 808, 1003, 1004, 1012, 612, 812, 1012, 819, 622, 819, 819, 822, 1002, 307, 829, 916, 812, 622, 901,
         629, 822, 624, 1002, 822, 819, 303, 622, 628, 1001, 308, 822, 307, 809, 1012, 901, 822, 612, 307, 916, 1002,
         624, 308, 901, 904, 308, 630, 904, 612, 829, 311, 903, 1002, 630, 1002, 916, 630, 612, 1004, 808, 809, 903,
         901, 1003, 1001, 812, 307, 819, 829, 1003, 619, 829, 809, 619, 308, 1001, 307, 916, 619, 1001, 901, 906, 901,
         806, 630, 328, 916, 829, 1004, 901, 612, 624, 829, 307, 903, 819, 916, 823, 619, 308, 829, 906, 903, 832, 903,
         819, 823, 806, 1003, 1002, 1003, 630, 812, 622, 622, 901, 916, 901, 916, 906, 822, 809, 916, 906, 619, 308,
         629, 916, 819, 308, 903, 1012, 622, 1003, 901, 901, 629, 904, 311, 1003, 311, 619, 903, 1001, 809, 622, 903,
         829, 1002, 307, 612, 629, 1001, 619, 916, 822, 904, 1001, 916, 629, 916, 913, 624, 1001, 1003, 916, 307, 1001,
         303, 808, 1012, 903, 822, 635, 903, 1002, 906, 916, 624, 819, 809, 901, 1001, 916, 903, 1002, 1012, 916, 916,
         901, 1002, 308, 635, 308, 819, 311, 628, 819, 819, 622, 916, 1001, 916, 901, 303, 829, 1002, 819, 819, 1003,
         311, 630, 1001, 809, 822, 903, 612, 809, 809, 622, 906, 809, 819, 630, 829, 622, 1001, 1001, 622, 904, 913,
         819, 628, 1003, 612, 819, 916, 809, 901, 829, 1001, 1003, 808, 1003, 1002, 1004, 808, 1002, 916, 612, 916, 822,
         1003, 829, 819, 612, 901, 829, 622, 612, 901, 1001, 628, 808, 1002, 308, 619, 812, 1003, 913, 1002, 1002, 1001,
         612]

room_dict = {r: [] for r in np.unique(rooms)}
for i in range(len(result)):
    room_dict[rooms[i]].append(result[i])
print(room_dict)
room_efficiency_dict = {}
poor_rooms = []
normal_rooms = []
for r in room_dict.keys():
    if sum(room_dict[r]) < len(room_dict[r]) / 2:
        room_efficiency_dict[r] = 0
        poor_rooms.append(r)
    else:
        room_efficiency_dict[r] = 1
        normal_rooms.append(r)
print(room_efficiency_dict)
print(len(room_efficiency_dict))
print(normal_rooms)
print(poor_rooms)
